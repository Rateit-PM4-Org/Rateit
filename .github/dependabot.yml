# To get started with Dependabot version updates, you'll need to specify which
# package ecosystems to update and where the package manifests are located.
# Please see the documentation for all configuration options:
# https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file

version: 2
updates:
  # Enable version updates for npm
  - package-ecosystem: "npm"
    name: "Frontend npm"
    # Look for `package.json` and `lock` files in the `root` directory
    directory: "/frontend"
    # Check the npm registry for updates every day (weekdays)
    schedule:
      interval: "daily"
    groups:  
      production-dependencies:
        dependency-type: "production"
      development-dependencies:
        dependency-type: "development"

  # Enable version updates for Docker
  - package-ecosystem: "docker"
    # Look for a `Dockerfile` in the `root` directory
    name: "API Docker"
    directory: "/api/docker"
    # Check for updates once a week
    schedule:
      interval: "daily"
    groups:  
      production-dependencies:
        dependency-type: "production"
      development-dependencies:
        dependency-type: "development"
  # Enable version updates for Docker
  - package-ecosystem: "docker"
    # Look for a `Dockerfile` in the `root` directory
    directory: "/frontend"
    name: "Frontend Docker"
    # Check for updates once a week
    schedule:
      interval: "daily"
    groups:  
      production-dependencies:
        dependency-type: "production"
      development-dependencies:
        dependency-type: "development"

  # Enable version updates for GitHub Actions
  - package-ecosystem: "github-actions"
    name: "GitHub Actions"
    # Workflow files stored in the default location of `.github/workflows`
    # You don't need to specify `/.github/workflows` for `directory`. You can use `directory: "/"`.
    directory: "/"
    schedule:
      interval: "daily"
    groups:  
      production-dependencies:
        dependency-type: "production"
      development-dependencies:
        dependency-type: "development"

  # Enable version updates for Gradle
  - package-ecosystem: "gradle"
    name: "API Gradle"
    # Look for `build.gradle` and `lock` files in the `root` directory
    directory: "/api"
    # Check the Gradle registry for updates every day (weekdays)
    schedule:
      interval: "daily"
    groups:  
      production-dependencies:
        dependency-type: "production"
      development-dependencies:
        dependency-type: "development"
