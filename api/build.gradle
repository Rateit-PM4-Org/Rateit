plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id "org.sonarqube" version "6.0.1.5171"
}

group = 'ch.zhaw.rateit'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "org.testcontainers:testcontainers:1.20.6"
	testImplementation "org.testcontainers:junit-jupiter:1.20.6"
	testImplementation "org.testcontainers:mongodb:1.20.6"

}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "failed", "skipped"
	}
	ignoreFailures = true
	finalizedBy jacocoTestReport
}

tasks.register('bootRunDev') {
	group = 'application'
	description = 'Runs the project with the dev profile'
	dependsOn(bootRun)
	bootRun {
		args = ["--spring.profiles.active=dev"]
	}
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonar {
  properties {
    property "sonar.projectKey", "rateit-pm4-org_rateit_api"
    property "sonar.organization", "rateit-pm4-org"
    property "sonar.host.url", "https://sonarcloud.io"
	property "sonar.sources", "src, docker"
  }
}

