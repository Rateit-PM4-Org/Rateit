apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  strategy: {}
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
        - name: api-container
          image: ghcr.io/rateit-pm4-org/rateit-api:stage
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe: 
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          resources: 
            limits:
              memory: 1024Mi
              cpu: 500m
          env:
            - name: SPRING_DATA_MONGODB_HOST
              valueFrom:
                configMapKeyRef:
                  name: rateit-env
                  key: MONGODB_HOST
            - name: CORS_ALLOWED-ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: rateit-env
                  key: FRONTEND_URL
            - name: SPRING_DATA_MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rateit-secret
                  key: mongo-user
            - name: SPRING_DATA_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rateit-secret
                  key: mongo-password
          volumeMounts:
            - name: api-props
              mountPath: /config
      automountServiceAccountToken: false
      volumes:
        - name: api-props
          configMap:
            name: rateit-env
            items:
              - key: application.properties
                path: application.properties

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    component: api
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: rateit
    component: api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  labels:
    component: api
spec:
  rules:
    - host: api-rateit-base.pm4.init-lab.ch
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 80
